/* JAVASCRIPT */
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-Este lenguaja trabaja 100% a trabajar de forma web

-trabaja de forma dinamica
es un programa que no necita colpilacion para poder trabajar en el, es un rumtime

-esta orientada a objetos
se crea un solo objeto que sera el padre el cual se utilizara para crear otros componenetes
como el usuario se crea un solo formato para luego reutilizarlo para otros componenstes
es la misma programacion que usa Java

-debilmente tipado
esta es una caracteristica que permite al prgramador escribir deforma no rigida el codigo
y javascript lo interpretara como ejemplo tenemos

4 + "7"; // 47
4 * "7"; // 28
2 + true; // 3
false - 3; // -3

--Forwards
ser compatible con versiones futuras significa que
incluir una adicion al lenguaje en un programa no causaria 
que se rompa si se ejecuta en un motor JS anterior.JS 
no es compatible con versiones futuras.

--JS ES BACKWARDS COMPATIBLE
la compatibilidad con versiones anteriores
significa que cuando se acepta con JS valido,
no habra un cambio futuro que haga que el codigo deje de funcionar. 

--CLASE 2 --

WebAssembly: lenguaje que se usa para crear aplicaciones web sin html ni css ni js

-desarrollo web
en el desarrollo web se tiene framword especificos que ayudan en la contruccion estructural
para hacer productos web mas robustos entre estos estan
--Angular.js
--vue.js
--react.js
--node.js: para trabajar con backend y frontend y se puede trabajar con IOT

--CLASE 3 --
--Elementos de lenguje de programacion--
   datos que ese guardan en memoria
   tareas(funciones) que se hace con la data

nota: (trabajare con visual studio code) se puede trabajar con atom

en la carpeta try se encontrarar los ejercicios relaizados de este cuerso desde cero 
para este primera clase comensaremos con los tipos de valores 

--number
40, 10, 20

--string
"Jose Daniel Martínez Cáceres"
"esta es una cadena un string"

--booleano
true
falce 

--valores vacios: con valores recervados par acuando hay un valor faltante 
null 	
undefined

--valores (no primitivos o objetos):
array [1,2,3,5] este es un un arreglo 
objeto {} este es un objeto de tipo objeto

-- con la palabra recervada typeof puedo saber que tipo de variable








